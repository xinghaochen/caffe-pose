layer {
  name: "data"
  type: "PoseData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    is_trans: false
    is_rotate: false
    is_zoom: false
  }
  pose_data_param {
    image_source: "/home/workspace/Datasets/ICVL/test_image.txt"
    label_source: "/home/workspace/Datasets/ICVL/test_label.txt"
    batch_size: 128
    shuffle: false
    new_height: 96
    new_width: 96
    root_folder: "/home/workspace/Datasets/ICVL/test/Depth/"
    point_num: 16
    point_dim: 3
    fx: 240.990005493
    fy: 240.960006714
    output_center: true
    cube_length: 150
    dataset: ICVL
  }
}
layer {
  name: "pose"
  type: "Slice"
  bottom: "label"
  top: "pose"
  top: "center"
  include {
    phase: TEST
  }
  slice_param {
    slice_dim: 1
    slice_point: 48
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu0"
  type: "ReLU"
  bottom: "conv0"
  top: "conv0"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "conv0"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "conv2_0"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_0"
  type: "ReLU"
  bottom: "conv2_0"
  top: "conv2_0"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv2_0"
  top: "conv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res1"
  type: "Eltwise"
  bottom: "conv2_0"
  bottom: "conv3"
  top: "res1"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res1"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "pool2"
  top: "pool2"
}
layer {
  name: "conv3_0"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_0"
  type: "ReLU"
  bottom: "conv3_0"
  top: "conv3_0"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3_0"
  top: "conv4"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res2"
  type: "Eltwise"
  bottom: "conv3_0"
  bottom: "conv5"
  top: "res2"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "pool3"
  top: "pool3"
}
layer {
  name: "fc1_0"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc1_0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu6_0"
  type: "ReLU"
  bottom: "fc1_0"
  top: "fc1_0"
}
layer {
  name: "drop1_0"
  type: "Dropout"
  bottom: "fc1_0"
  top: "fc1_0"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc2_0"
  type: "InnerProduct"
  bottom: "fc1_0"
  top: "fc2_0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu7_0"
  type: "ReLU"
  bottom: "fc2_0"
  top: "fc2_0"
}
layer {
  name: "drop2_0"
  type: "Dropout"
  bottom: "fc2_0"
  top: "fc2_0"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc3_0"
  type: "InnerProduct"
  bottom: "fc2_0"
  top: "fc3_0"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  inner_product_param {
    num_output: 48
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "error"
  type: "PoseDistance"
  bottom: "fc3_0"
  bottom: "pose"
  bottom: "center"
  top: "error"
  top: "output"
  include {
    phase: TEST
  }
  pose_distance_param {
    fx: 240.99
    fy: 240.96
    ux: 160.0
    uy: 120.0
    output_pose: true
    cube_length: 150
  }
}
